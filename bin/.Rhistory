colnames(clinic)
dim(clinic)
colnames(clinic)
head(clinic)
# clinic<-clinic[!is.na(clinic$OS),]
# clinic<-clinic[!is.na(clinic$OS_status),]
# clinic<-clinic[!clinic$OS<30,]
colnames(clinic) <- c("fustat", "futime")
load("../data/clinical_tcga_xena.Rdata")
head(phe)
age <- phe$age_at_initial_pathologic_diagnosis
age <- na.omit(age)
mean(age)
clinic <- phe
### survival
load("../data/survival_tcga_xena.Rdata")
clinic <- phe
rownames(clinic)
colnames(clinic)
dim(clinic)
colnames(clinic)
head(clinic)
# clinic<-clinic[!is.na(clinic$OS),]
# clinic<-clinic[!is.na(clinic$OS_status),]
# clinic<-clinic[!clinic$OS<30,]
colnames(clinic) <- c("fustat", "futime")
rt <- exp
rt <- t(rt)
rownames(rt)
rownames(clinic)
head(rt)
head(clinic)
dim(clinic)
# library(tidyverse)
# df <- list(rt, clinic) %>%
#   map(~ .x %>%
#         as.data.frame %>%
#         rownames_to_column('rn')) %>%
#   reduce(left_join, by = 'rn') %>%
#   column_to_rownames('rn')
# dim(df)
sample <- intersect(rownames(rt), rownames(clinic))
table(rownames(rt) %in% sample)
head(sample)
rt = rt[sample,]
clinic =clinic[sample,]
df <- merge(rt, clinic, by= "row.names", all.x=TRUE)
df <- as.data.frame(df)
rownames(df) <- df$Row.names
head(df)
dim(df)
df$fustat = ifelse(df$fustat == "Dead", "1", "0")   ## ROC final
df_sur <- df
load("../data/clinical_tcga_xena.Rdata")
head(phe)
age <- phe$age_at_initial_pathologic_diagnosis
age <- na.omit(age)
mean(age)
clinic <- phe
rt <- exp
rt <- t(rt)
rownames(rt)
rownames(clinic)
head(rt)
head(clinic)
dim(clinic)
head(sample)
rt = rt[sample,]
clinic =clinic[sample,]
df <- merge(rt, clinic, by= "row.names", all.x=TRUE)
df <- as.data.frame(df)
rownames(df) <- df$Row.names
head(df)
dim(df)
df_cli <- df
## survival_tcga_Figure_2EFH.R
head(df_sur)
df_sur <- df_sur[,c(4, 5, 3)]
head(df_cli)
df_cli <- df_cli[, c(4, 5, 6, 7, 8, 9, 10)]
colnames(df_cli)
sameSample=intersect(row.names(df_cli),row.names(df_sur))
df_sur=df_sur[sameSample,]
df_cli=df_cli[sameSample,]
rt=cbind(df_sur, df_cli)
head(rt)
# rt <- na.omit(rt)
rt$fustat <- as.numeric(rt$fustat)
rt$futime <- as.numeric(rt$futime)
rt <- subset(rt, age_at_initial_pathologic_diagnosis != "NA")
rt <- subset(rt, age_at_initial_pathologic_diagnosis != "")
# rt <- subset(rt, ldh1_mutation_found != "NA")
# rt <- subset(rt, ldh1_mutation_found != "")
rt <- subset(rt, radiation_therapy != "NA")
rt <- subset(rt, radiation_therapy != "")
rt <- subset(rt, neoplasm_histologic_grade != "")
rt$Age <- ifelse(rt$age_at_initial_pathologic_diagnosis <= 40,"<=40",">40")
rt$IDH <- rt$ldh1_mutation_found ## 逻辑
rt$'Radio' <- rt$radiation_therapy  ## 逻辑
rt$Gender <- rt$gender.demographic
head(rt)
colnames(rt)
table(rt$radiation_therapy)
table(rt$Radio)
table(rt$gender.demographic)
table(rt$neoplasm_histologic_grade)
rt$Grade <- rt$neoplasm_histologic_grade ## 逻辑
rt$Grade <- gsub("G[23]", "G2 G3", rt$neoplasm_histologic_grade)
table(rt$Grade)
colnames(rt)
rt_ind <- rt[, c(1, 2, 3, 11, 14, 15, 13)]   ## final tcga all
# rt_ind <- rt[, c(1, 2, 3, 11, 14, 13)]   ## final tcga sep
head(rt_ind)
table(rt$neoplasm_histologic_grade)
table(rt$disease_code)
table(rt_ind$Grade)
colnames(rt_ind)[7] <- "Treatment_Radio"    ## final tcga all
## final
library("dplyr")
library(ggplot2)
library(survminer)
library(survival)
library(forestmodel)
panels <- list(
list(width = 0.01),
list(width = 0.1, display = ~variable,
fontface = "bold", heading = "Factor"),
list(width = 0.1, display = ~level),
list(width = 0.05, display = ~n, hjust = 1, heading = "Number"),
list(width = 0.03, item = "vline", hjust = 0.5),
list(width = 0.55, item = "forest", hjust = 0.5,
heading = "Hazard ratio", linetype = "dashed",line_x = 0),
list(width = 0.03, item = "vline", hjust = 0.5),
list(width = 0.12, display = ~ ifelse(reference, "Reference", sprintf("%0.2f (%0.2f, %0.2f)",
trans(estimate), trans(conf.low), trans(conf.high))), display_na = NA),
list(width = 0.05,
display = ~ ifelse(reference, "", format.pval(p.value, digits = 1, eps = 0.001)),
display_na = NA, hjust = 1, heading = "pvalue"),
list(width = 0.03))
## multiForest
pdf("Figure_2J.pdf",width = 10, height = 5)
# pdf("Supplementary_Figure_3E.pdf",width = 10, height = 5)
# pdf("Supplementary_Figure_3F.pdf",width = 10, height = 5)
# pdf("Figure_3L.pdf",width = 10, height = 7)
# pdf("Supplementary_Figure_5E.pdf",width = 10, height = 7)
# pdf("Supplementary_Figure_5F.pdf",width = 10, height = 7)
# rt_ind <- rt_ind[, -7]
print(forest_model(coxph(Surv(futime, fustat) ~ ., rt_ind), factor_separate_line = T))
dev.off()
library(forestmodel)
colnames(rt_ind)[seq(3, ncol(rt_ind))]
covariates <- colnames(rt_ind)[seq(3, ncol(rt_ind))]
univ_formulas <- sapply(covariates, function(x) as.formula(paste('Surv(futime, fustat)~', x)))
univ_formulas
univ_models <- lapply(univ_formulas, function(x){coxph(x, data = rt_ind)})
pdf("Figure_2I.pdf",width = 10, height = 5)
# pdf("Supplementary_Figure_3C.pdf",width = 10, height = 5)
# pdf("Supplementary_Figure_3D.pdf",width = 10, height = 5)
# pdf("Figure_3K.pdf",width = 10, height = 7)
# pdf("Supplementary_Figure_5C.pdf",width = 10, height = 7)
# pdf("Supplementary_Figure_5D.pdf",width = 10, height = 7)
forest_model(model_list = univ_models, covariates = covariates, merge_models = T, panels)
## 6 x 8
dev.off()
setwd("/Users/lanzhzh/Documents/workitem/TCGA_LGG/brain/upload_code/code/bin")
inputFile="../data/cor.result.txt"
data = read.table(inputFile, header=T, sep="\t", check.names=F)
p.col = c('gold','pink','orange','LimeGreen','darkgreen')
fcolor = function(x,p.col){
color = ifelse(x>0.8,p.col[1],ifelse(x>0.6,p.col[2],ifelse(x>0.4,p.col[3],
ifelse(x>0.2,p.col[4], p.col[5])
)))
return(color)
}
p.cex = seq(2.5, 5.5, length=5)
fcex = function(x){
x=abs(x)
cex = ifelse(x<0.1,p.cex[1],ifelse(x<0.2,p.cex[2],ifelse(x<0.3,p.cex[3],
ifelse(x<0.4,p.cex[4],p.cex[5]))))
return(cex)
}
points.color = fcolor(x=data$pvalue,p.col=p.col)
data$points.color = points.color
points.cex = fcex(x=data$cor)
data$points.cex = points.cex
data=data[order(data$cor),]
xlim = ceiling(max(abs(data$cor))*10)/10
pdf(file="Lollipop.pdf", width=9, height=7)
layout(mat=matrix(c(1,1,1,1,1,0,2,0,3,0),nc=2),width=c(8,2.2),heights=c(1,2,1,2,1))
par(bg="white",las=1,mar=c(5,18,2,4),cex.axis=1.5,cex.lab=2)
plot(1,type="n",xlim=c(-xlim,xlim),ylim=c(0.5,nrow(data)+0.5),xlab="Correlation Coefficient",ylab="",yaxt="n",yaxs="i",axes=F)
rect(par('usr')[1],par('usr')[3],par('usr')[2],par('usr')[4],col="#F5F5F5",border="#F5F5F5")
grid(ny=nrow(data),col="white",lty=1,lwd=2)
segments(x0=data$cor,y0=1:nrow(data),x1=0,y1=1:nrow(data),lwd=4)
points(x=data$cor,y = 1:nrow(data),col = data$points.color,pch=16,cex=data$points.cex)
text(par('usr')[1],1:nrow(data),data$Cell,adj=1,xpd=T,cex=1.5)
pvalue.text=ifelse(data$pvalue<0.001,'<0.001',sprintf("%.03f",data$pvalue))
redcutoff_cor=0
redcutoff_pvalue=0.05
text(par('usr')[2],1:nrow(data),pvalue.text,adj=0,xpd=T,col=ifelse(abs(data$cor)>redcutoff_cor & data$pvalue<redcutoff_pvalue,"red","black"),cex=1.5)
axis(1,tick=F)
par(mar=c(0,4,3,4))
plot(1,type="n",axes=F,xlab="",ylab="")
legend("left",legend=c(0.1,0.2,0.3,0.4,0.5),col="black",pt.cex=p.cex,pch=16,bty="n",cex=2,title="abs(cor)")
par(mar=c(0,6,4,6),cex.axis=1.5,cex.main=2)
barplot(rep(1,5),horiz=T,space=0,border=NA,col=p.col,xaxt="n",yaxt="n",xlab="",ylab="",main="pvalue")
axis(4,at=0:5,c(1,0.8,0.6,0.4,0.2,0),tick=F)
dev.off()
library(limma)
library(reshape2)
library(ggplot2)
library(ggpubr)
library(corrplot)
pFilter=0.001
geneName="NID2"
geneFile="../data/CheckpointGene.txt"
## CGGA03.tcgabatchNormalize_survival_gepia_Figure_2EF.R
data[1:4, 1:4]
data=avereps(data)
gene=read.table(geneFile, header=F, sep="\t", check.names=F)
sameGene=intersect(row.names(data), as.vector(gene[,1]))
sameGene
data=t(data[c(geneName, sameGene),])
data=t(avereps(data))
library(sva)
library(limma)
# file1="../data/tcgaSymbol_LGG.txt"
# file2="../data/tcgaSymbol_GBM.txt"
#
# rt1=read.table(file1,sep="\t",header=T,check.names=F)
# rt1=as.matrix(rt1)
# rownames(rt1)=rt1[,1]
# exp1=rt1[,2:ncol(rt1)]
# dimnames1=list(rownames(exp1),colnames(exp1))
# data1=matrix(as.numeric(as.matrix(exp1)),nrow=nrow(exp1),dimnames=dimnames1)
# data1=avereps(data1)
load("../data/TCGA-LGG.htseq_fpkmtotpm.Rdata")   ##
data1=avereps(stad_tpm)
group=sapply(strsplit(colnames(data1),"\\-"),"[",4)
group=sapply(strsplit(group,""),"[",1)
group=gsub("2","1",group)
table(group)
data1=data1[,group==0]
colnames(data1) <- gsub("-0[12][ABC]$", "", colnames(data1))
data1[1:4, 1:4]
# rt2=read.table(file2,sep="\t",header=T,check.names=F)
# rt2=as.matrix(rt2)
# rownames(rt2)=rt2[,1]
# exp2=rt2[,2:ncol(rt2)]
# dimnames2=list(rownames(exp2),colnames(exp2))
# data2=matrix(as.numeric(as.matrix(exp2)),nrow=nrow(exp2),dimnames=dimnames2)
# data2=avereps(data2)
load("../data/TCGA-GBM.htseq_fpkmtotpm.Rdata")   ##
data2=avereps(stad_tpm)
group=sapply(strsplit(colnames(data2),"\\-"),"[",4)
group=sapply(strsplit(group,""),"[",1)
group=gsub("2","1",group)
table(group)
colnames(data2[,group==1])
data2=data2[,group==0]
colnames(data2) <- gsub("-0[12][ABC]$", "", colnames(data2))
# colnames(data2) <- gsub("-11A$", "", colnames(data2))
# colnames(data2) <- gsub("[ABC]$", "", colnames(data2))
data2[1:4, 1:4]
dim(data1)
dim(data2)
sameGene=intersect(row.names(data1),row.names(data2))
data=cbind(data1[sameGene,],data2[sameGene,])
# data <- data2       ## GBM
# data <- data1       ## LGG
data <- log2(data + 1)    ## pearson survival his_anova
# data <- log10(data + 1)   ##  drug
dim(data)
table(duplicated(colnames(data)))
data <- t(data)
data <- avereps(data)
data <- t(data)
dim(data)
x=as.numeric(data[geneName,])
outTab=data.frame()
for(i in sameGene){
if(i==geneName){next}
y=as.numeric(data[i,])
corT=cor.test(x, y, method = 'pearson')
cor=corT$estimate
pvalue=corT$p.value
if(pvalue<pFilter){
outTab=rbind(outTab, cbind(Query=geneName, Gene=i, cor, pvalue))
}
}
library(limma)
library(reshape2)
library(ggplot2)
library(ggpubr)
library(corrplot)
## survival_tcga_Figure_2EFH.R
pFilter=0.001
geneName="NID2"
geneFile="../data/CheckpointGene.txt"
data[1:4, 1:4]
data=avereps(data)
gene=read.table(geneFile, header=F, sep="\t", check.names=F)
sameGene=intersect(row.names(data), as.vector(gene[,1]))
sameGene
data=t(data[c(geneName, sameGene),])
data=t(avereps(data))
x=as.numeric(data[geneName,])
outTab=data.frame()
for(i in sameGene){
if(i==geneName){next}
y=as.numeric(data[i,])
corT=cor.test(x, y, method = 'pearson')
cor=corT$estimate
pvalue=corT$p.value
if(pvalue<pFilter){
outTab=rbind(outTab, cbind(Query=geneName, Gene=i, cor, pvalue))
}
}
write.table(file="corResult.txt", outTab, sep="\t", quote=F, row.names=F)
data=t(data[c(geneName, as.vector(outTab[,2])),])
M=cor(data)
corrplot(M,
method = "circle",
order = "original",
type = "upper",
col=colorRampPalette(c("green", "white", "red"))(50)
)
pdf(file="corpot1.pdf",width=7,height=7)
corrplot(M,
method = "circle",
order = "original",
type = "upper",
col=colorRampPalette(c("green", "white", "red"))(50)
)
dev.off()
pdf(file="corpot2.pdf",width=8,height=8)
corrplot(M,
order="original",
method = "color",
number.cex = 0.7,
addCoef.col = "black",
diag = TRUE,
tl.col="black",
col=colorRampPalette(c("blue", "white", "red"))(50))
dev.off()
RColorBrewer::brewer.pal(8, "Paired")[1]
RColorBrewer::brewer.pal(8, "Paired")[2]
RColorBrewer::brewer.pal(8, "Paired")[6]
pdf("corpot3.pdf",height=6,width=8)
par(oma=c(0.5,1,1,1.2))
res1 <- cor.mtest(data, conf.level = .95)
corrplot(M, type = "upper", tl.pos = "lt", tl.srt = 45, tl.cex=0.6)
corrplot(M, add = TRUE, type = "lower", method = "color",
col = "white", diag = FALSE, tl.pos = "n", cl.pos = "n",
p.mat = res1$p, sig.level = c(.001, .01, .05), outline="#A6CEE3",
insig = "label_sig", pch.cex = 0.5, pch.col = "#1F78B4")
dev.off()
col1=colorRampPalette(colors =c("red","white","darkgreen"), space="Lab")
pdf("corpot4.pdf",height=6,width=8)
corrplot(M, type = "lower", method = "color", tl.cex=0.6, col = col1(10),
p.mat = res1$p, sig.level = c(.001, .01, .05), outline="#A6CEE3",
insig = "label_sig", pch.cex = 0.5, pch.col = "black")
dev.off()
col1=colorRampPalette(colors =c("red","white","darkgreen"), space="Lab")
pdf("Supplementary_Figure_8B.pdf",height=6,width=8)
corrplot(M, type = "lower", method = "color", tl.cex=0.6, col = col1(10),
p.mat = res1$p, sig.level = c(.001, .01, .05), outline="#A6CEE3",
insig = "label_sig", pch.cex = 0.5, pch.col = "black")
dev.off()
library(sva)
library(limma)
# file1="../data/tcgaSymbol_LGG.txt"
# file2="../data/tcgaSymbol_GBM.txt"
#
# rt1=read.table(file1,sep="\t",header=T,check.names=F)
# rt1=as.matrix(rt1)
# rownames(rt1)=rt1[,1]
# exp1=rt1[,2:ncol(rt1)]
# dimnames1=list(rownames(exp1),colnames(exp1))
# data1=matrix(as.numeric(as.matrix(exp1)),nrow=nrow(exp1),dimnames=dimnames1)
# data1=avereps(data1)
load("../data/TCGA-LGG.htseq_fpkmtotpm.Rdata")   ##
data1=avereps(stad_tpm)
group=sapply(strsplit(colnames(data1),"\\-"),"[",4)
group=sapply(strsplit(group,""),"[",1)
group=gsub("2","1",group)
table(group)
data1=data1[,group==0]
colnames(data1) <- gsub("-0[12][ABC]$", "", colnames(data1))
data1[1:4, 1:4]
# rt2=read.table(file2,sep="\t",header=T,check.names=F)
# rt2=as.matrix(rt2)
# rownames(rt2)=rt2[,1]
# exp2=rt2[,2:ncol(rt2)]
# dimnames2=list(rownames(exp2),colnames(exp2))
# data2=matrix(as.numeric(as.matrix(exp2)),nrow=nrow(exp2),dimnames=dimnames2)
# data2=avereps(data2)
load("../data/TCGA-GBM.htseq_fpkmtotpm.Rdata")   ##
data2=avereps(stad_tpm)
group=sapply(strsplit(colnames(data2),"\\-"),"[",4)
group=sapply(strsplit(group,""),"[",1)
group=gsub("2","1",group)
table(group)
colnames(data2[,group==1])
data2=data2[,group==0]
colnames(data2) <- gsub("-0[12][ABC]$", "", colnames(data2))
# colnames(data2) <- gsub("-11A$", "", colnames(data2))
# colnames(data2) <- gsub("[ABC]$", "", colnames(data2))
data2[1:4, 1:4]
dim(data1)
dim(data2)
sameGene=intersect(row.names(data1),row.names(data2))
data=cbind(data1[sameGene,],data2[sameGene,])
data <- log2(data + 1)    ## pearson survival his_anova
# data <- log10(data + 1)   ##  drug
dim(data)
table(duplicated(colnames(data)))
data <- t(data)
data <- avereps(data)
data <- t(data)
dim(data)
ins <- c("NID1", "NID2")
exp <-data[row.names(data) %in% ins, ]
exp[1:2, 1:2]
### survival
load("../data/survival_tcga_xena.Rdata")
clinic <- phe
rownames(clinic)
colnames(clinic)
dim(clinic)
colnames(clinic)
head(clinic)
# clinic<-clinic[!is.na(clinic$OS),]
# clinic<-clinic[!is.na(clinic$OS_status),]
# clinic<-clinic[!clinic$OS<30,]
colnames(clinic) <- c("fustat", "futime")
rt <- exp
rt <- t(rt)
rownames(rt)
rownames(clinic)
head(rt)
head(clinic)
dim(clinic)
# library(tidyverse)
# df <- list(rt, clinic) %>%
#   map(~ .x %>%
#         as.data.frame %>%
#         rownames_to_column('rn')) %>%
#   reduce(left_join, by = 'rn') %>%
#   column_to_rownames('rn')
# dim(df)
sample <- intersect(rownames(rt), rownames(clinic))
table(rownames(rt) %in% sample)
head(sample)
rt = rt[sample,]
clinic =clinic[sample,]
df <- merge(rt, clinic, by= "row.names", all.x=TRUE)
df <- as.data.frame(df)
rownames(df) <- df$Row.names
head(df)
dim(df)
df_cli <- df
df$fustat = ifelse(df$fustat == "Dead", "1", "0")   ## ROC final
df_sur <- df
#####
gene <- "NID2"
head(df)
dim(df)
dim(df)
highcutoff <- 50
lowcutoff <- 50
df <- as.data.frame(df)
rownames(df) <- df$Row.names
high_df = rownames(df[df[,gene] > quantile(df[,gene],as.numeric(highcutoff)/100),1,drop = F])
df
df[df$futime == 1448, ]
df[df$futime == 1448, ]$Row.names
quantile(df[,gene], as.numeric(highcutoff)/100)
low_df = rownames(df[df[,gene] < quantile(df[,gene], as.numeric(lowcutoff)/100),1,drop = F])
high_num = length(high_df)
low_num = length(low_df)
high_num
df_sur <- df
df_sur <- subset(df_sur, futime != "NA")
df_sur = df_sur[df_sur$Row.names %in% c(high_df,low_df),]
dim(df_sur)
head(df_sur)
df_sur = cbind(df_sur,0)
title = "Overall Survival"
table(df_sur$fustat)
df_sur$futime = as.numeric(df_sur$futime) %/% 30 + 1
head(df_sur)
df_sur<-df_sur[!df_sur$futime>120,]    ## all
df_sur[df_sur$Row.names %in% high_df, 6] = "high"
df_sur[df_sur$Row.names %in% low_df,6] = "low"
df_sur[df_sur$futime==20,]
quantile(df[,gene])
df_sur$fustat = as.numeric(as.vector(df_sur$fustat))  # time
df_sur$futime = as.numeric(as.vector(df_sur$futime))  # OS
colnames(df_sur)[6] = "CLASS"
df_sur$CLASS = factor(df_sur$CLASS,levels = c("low","high"))
library(survival)
library("survminer")
mod = Surv(df_sur$futime, df_sur$fustat)
mfit = survfit(mod~df_sur$CLASS)
sur = survdiff(mod~df_sur$CLASS)
p.val <- 1 - pchisq(sur$chisq, length(sur$n) - 1)
p.val = signif(p.val,2)
p.val
head(df_sur)
dim(clinic)
quantile(mfit, probs=c(0.25, 0.5, 0.75), conf.int=FALSE)   #25%, 50% and 75% survival rate
